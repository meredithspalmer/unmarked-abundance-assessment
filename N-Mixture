## N-Mixture with Grumeti Data ## 

# set workspace 
rm(list=ls())
library(unmarked); library(plyr); library(reshape); library(lubridate); library(boot)

# load data 
data <- read.csv("grumeti_prepped.csv")
effort <- read.csv("grumeti_effort.csv")
names(effort)[1] <- "date"
traits <- read.csv("../Species_Traits.csv")
grumeti <- read.csv("grumeti_counts.csv")

# habitat classificatioms
hab <- data[c("site", "habitat")]
hab <- hab[!duplicated(hab),]

# select parameters
species <- c("warthog", "waterbuck", "impala")
distribution <- "ZIP" 
nboots <- 1000 
newdf <- NULL; newday <- NULL; nightdf <- NULL; newhab <- NULL

# n-mix ALL function 
nmix_all <- function(d, indices, species, distribution, grumeti, nboots){ 
  data <- d[indices,]
  
  # K_est = 10x predicted ABUNDANCE 
  kest <- grumeti[grumeti$species == species,]$counts * 10 
  
  # summarize data by week
  sppsub <- data[data$species == species,]
  
  #all 
  sub <- ddply(sppsub, .(date, site), summarise, count = sum(count))
  sub <- merge(effort, sub, all.x=T)
  sub[is.na(sub)] <- 0
  sub$week <- week(sub$date) #no years to worry about so okay here
  sub <- ddply(sub, .(site, week), summarise, count = sum(count))
  
  # need same number of rows for each site; add NAs 
  mindate <- min(sub$week); maxdate <- max(sub$week)
  allweeks <- seq(mindate, maxdate)
  sites <- unique(sub$site)
  sites.long <- rep(sites, each=length(allweeks))
  allweeks.long <- rep(allweeks, times=length(sites))
  fulldat <- cbind(as.character(sites.long), as.numeric(allweeks.long))
  fulldat <- data.frame(fulldat)
  names(fulldat) <- c("site", "week")
  
  # format data for unmarked
  
  #sub
  sub <- merge(fulldat, sub, all.x=T)
  sub <- reshape(sub, idvar="site", timevar="week", direction="wide")
  sub <- merge(sub, hab, all.x=T)
  sub <- sub[!is.na(sub$habitat),]
  siteCovsSub <- data.frame(habitat = sub$habitat)
  sub <- unmarkedFramePCount(y = sub[,2:14], siteCovs=siteCovsSub, obsCovs=NULL)
  
  #all data 
  all_null <- pcount(~1 ~1, data = sub, mixture=distribution, K=kest)
  x <- backTransform(all_null, type="state")
  
  return(x@estimate)
}

# n-mix DAY function
nmix_day <- function(d, indices, species, distribution, grumeti, nboots){ 
  data <- d[indices,]
  
  # K_est = 10x predicted ABUNDANCE 
  kest <- grumeti[grumeti$species == species,]$counts * 10 
  
  # summarize data by week
  sppsub <- data[data$species == species,]
  
  #day
  day <- sppsub[sppsub$period == "day",]
  day <- ddply(day, .(date, site), summarise, count = sum(count))
  day <- merge(effort, day, all.x=T)
  day[is.na(day)] <- 0
  day$week <- week(day$date)
  day <- ddply(day, .(site, week), summarise, count = sum(count))
  
  # need same number of rows for each site; add NAs 
  mindate <- min(day$week); maxdate <- max(day$week)
  allweeks <- seq(mindate, maxdate)
  sites <- unique(day$site)
  sites.long <- rep(sites, each=length(allweeks))
  allweeks.long <- rep(allweeks, times=length(sites))
  fulldat <- cbind(as.character(sites.long), as.numeric(allweeks.long))
  fulldat <- data.frame(fulldat)
  names(fulldat) <- c("site", "week")
  
  # format data for unmarked: day
  day <- merge(fulldat, day, all.x=T)
  day <- reshape(day, idvar="site", timevar="week", direction="wide")
  day <- merge(day, hab, all.x=T)
  day <- day[!is.na(day$habitat),]
  siteCovsDay <- data.frame(habitat = day$habitat)
  day <- unmarkedFramePCount(y = day[,2:14], siteCovs=siteCovsDay, obsCovs=NULL)
  
  #day data 
  day_null <- pcount(~1 ~1, data = day, mixture=distribution, K=kest)
  x <- backTransform(day_null, type="state")
  
  return(x@estimate)
}

# n-mix NIGHT function
nmix_night <- function(d, indices, species, distribution, grumeti, nboots){ 
  data <- d[indices,]
  
  # K_est = 10x predicted ABUNDANCE 
  kest <- grumeti[grumeti$species == species,]$counts * 10 
  
  # summarize data by week
  sppsub <- data[data$species == species,]
  
  #night
  night <- sppsub[sppsub$period == "night",]
  night <- ddply(night, .(date, site), summarise, count = sum(count))
  night <- merge(effort, night, all.x=T)
  night[is.na(night)] <- 0
  night$week <- week(night$date)
  night <- ddply(night, .(site, week), summarise, count = sum(count))
  
  # need same number of rows for each site; add NAs 
  mindate <- min(night$week); maxdate <- max(night$week)
  allweeks <- seq(mindate, maxdate)
  sites <- unique(night$site)
  sites.long <- rep(sites, each=length(allweeks))
  allweeks.long <- rep(allweeks, times=length(sites))
  fulldat <- cbind(as.character(sites.long), as.numeric(allweeks.long))
  fulldat <- data.frame(fulldat)
  names(fulldat) <- c("site", "week")
  
  # format data for unmarked: night
  night <- merge(fulldat, night, all.x=T)
  night <- reshape(night, idvar="site", timevar="week", direction="wide")
  night <- merge(night, hab, all.x=T)
  night <- night[!is.na(night$habitat),]
  siteCovsNight <- data.frame(habitat = night$habitat)
  night <- unmarkedFramePCount(y = night[,2:14], siteCovs=siteCovsNight, obsCovs=NULL)
  
  #night data 
  night_null <- pcount(~1 ~1, data = night, mixture=distribution, K=kest)
  x <- backTransform(night_null, type="state")
  
  return(x@estimate)
}

# n-mix HABITAT function 
nmix_hab <- function(d, indices, species, distribution, grumeti, nboots){ 
  data <- d[indices,]
  woodsites <- length(unique(data[data$habitat == "woodlands",]$site))
  plainsites <- length(unique(data[data$habitat == "plains",]$site))
  
  # K_est = 10x predicted ABUNDANCE 
  kest <- grumeti[grumeti$species == species,]$counts * 10 
  
  # summarize data by week
  sppsub <- data[data$species == species,]
  
  #all 
  sub <- ddply(sppsub, .(date, site), summarise, count = sum(count))
  sub <- merge(effort, sub, all.x=T)
  sub[is.na(sub)] <- 0
  sub$week <- week(sub$date) #no years to worry about so okay here
  sub <- ddply(sub, .(site, week), summarise, count = sum(count))
  
  # need same number of rows for each site; add NAs 
  mindate <- min(sub$week); maxdate <- max(sub$week)
  allweeks <- seq(mindate, maxdate)
  sites <- unique(sub$site)
  sites.long <- rep(sites, each=length(allweeks))
  allweeks.long <- rep(allweeks, times=length(sites))
  fulldat <- cbind(as.character(sites.long), as.numeric(allweeks.long))
  fulldat <- data.frame(fulldat)
  names(fulldat) <- c("site", "week")
  
  # format data for unmarked
  
  #sub
  sub <- merge(fulldat, sub, all.x=T)
  sub <- reshape(sub, idvar="site", timevar="week", direction="wide")
  sub <- merge(sub, hab, all.x=T)
  sub <- sub[!is.na(sub$habitat),]
  siteCovsSub <- data.frame(habitat = sub$habitat)
  sub <- unmarkedFramePCount(y = sub[,2:14], siteCovs=siteCovsSub, obsCovs=NULL)
  
  #create dataframe to predict 
  HabData <- data.frame(habitat = as.factor(c("woodlands", "plains")))
  
  #hab data 
  all_hab <- pcount(~1 ~habitat, data=sub, mixture=distribution, K=kest) #rm kest? 
  plains <- backTransform(linearComb(all_hab, c(1,0), type="state"))  
  woods <- backTransform(linearComb(all_hab, c(1,1), type="state"))
  finalest <- ((plains@estimate*plainsites)+(woods@estimate*woodsites))/(plainsites+woodsites)
  return(finalest)
}

# run ALL data 
for(i in 1:length(species)){ 
  
  nmix_all.boot <- boot(data, species=species[i], distribution=distribution, grumeti=grumeti, 
                        R = nboots, statistic = nmix_all)
  nmix_all.ci <- boot.ci(nmix_all.boot, conf=0.95, type="perc")
  nmix_all.sd <- sd(nmix_all.boot$t)
  
  newdf$species[i] <- as.character(species[i])
  newdf$subset[i] <- "all"
  newdf$boot.mean.perc[i] <- mean(nmix_all.boot$t)
  newdf$boot.uCI.perc[i] <- nmix_all.ci$percent[5]
  newdf$boot.lCI.perc[i] <- nmix_all.ci$percent[4]  
  newdf$boot.sd.perc[i] <- nmix_all.sd
  newdf <- data.frame(newdf)
  print(newdf)
}

# run boot on DAY data 
for(i in 1:length(species)){ 
  
  nmix_day.boot <- boot(data, species=species[i], distribution=distribution, grumeti=grumeti, 
                        R = nboots, statistic = nmix_day)
  nmix_day.ci <- boot.ci(nmix_day.boot, conf=0.95, type="perc")
  nmix_day.sd <- sd(nmix_day.boot$t)
  
  newday$species[i] <- as.character(species[i])
  newday$subset[i] <- "all"
  newday$boot.mean.perc[i] <- mean(nmix_day.boot$t)
  newday$boot.uCI.perc[i] <- nmix_day.ci$percent[5]
  newday$boot.lCI.perc[i] <- nmix_day.ci$percent[4]  
  newday$boot.sd.perc[i] <- nmix_day.sd
  newday <- data.frame(newday)
  print(newday)
}

# run boot on NIGHT data 
for(i in 1:length(species)){ 
  
  nmix_night.boot <- boot(data, species=species[i], distribution=distribution, grumeti=grumeti, 
                          R = nboots, statistic = nmix_night)
  nmix_night.ci <- boot.ci(nmix_night.boot, conf=0.95, type="perc")
  nmix_night.sd <- sd(nmix_night.boot$t)
  
  nightdf$species[i] <- as.character(species[i])
  nightdf$subset[i] <- "night"
  nightdf$boot.mean.perc[i] <- mean(nmix_night.boot$t)
  nightdf$boot.uCI.perc[i] <- nmix_night.ci$percent[5]
  nightdf$boot.lCI.perc[i] <- nmix_night.ci$percent[4]  
  nightdf$boot.sd.perc[i] <- nmix_night.sd
  nightdf <- data.frame(nightdf)
  print(nightdf)
}

# run boot on HABITAT data 
for(i in 1:length(species)){ 
  
  nmix_hab.boot <- boot(data, species=species[i], distribution=distribution, grumeti=grumeti, 
                        R = nboots, statistic = nmix_hab)
  nmix_hab.ci <- boot.ci(nmix_hab.boot, conf=0.95, type="perc")
  nmix_hab.sd <- sd(nmix_hab.boot$t)
  
  newhab$species[i] <- as.character(species[i])
  newhab$subset[i] <- "wHab"
  newhab$boot.mean.perc[i] <- mean(nmix_hab.boot$t)
  newhab$boot.uCI.perc[i] <- nmix_hab.ci$percent[5]
  newhab$boot.lCI.perc[i] <- nmix_hab.ci$percent[4]  
  newhab$boot.sd.perc[i] <- nmix_hab.sd
  newhab <- data.frame(newhab)
  print(newhab)
}
